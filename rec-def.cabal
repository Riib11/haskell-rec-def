cabal-version:      2.4
name:               rec-def
version:            0.1
synopsis:           Recusively defined values
description:
   This library provides safe APIs that allow you to define and calculate
   values recursively, and still get a result out:
   .
   > let s1 = rInsert 23 s2
   >     s2 = rInsert 42 s1
   > in getR s1
   .
   will not loop, but rather  produce the set @fromList [23,42]@
   .
   See the
   [https://github.com/nomeata/haskell-rec-def/blob/master/examples.hs](examples.hs)
   file for more examples, or just start using the modules
   .
   * "Data.Recursive.Set"
   * "Data.Recursive.CanBe"
   * "Data.Recursive.MustBe"
   .
   For the (unsafe) building blocks to build such APIs, see "Data.Recursive.R.Internal".
homepage:           https://github.com/nomeata/haskell-rec-def
bug-reports:        https://github.com/nomeata/haskell-rec-def/issues/new
license:            BSD-2-Clause
license-file:       LICENSE
author:             Joachim Breitner
maintainer:         mail@joachim-breitner.de
copyright:          2022 Joachim Breitner
extra-source-files:
    CHANGELOG.md
    README.md
    examples.hs

library
    exposed-modules: Data.Recursive.CanBe
    exposed-modules: Data.Recursive.CanBe.Internal
    exposed-modules: Data.Recursive.MustBe
    exposed-modules: Data.Recursive.MustBe.Internal
    exposed-modules: Data.Recursive.Propagator
    exposed-modules: Data.Recursive.R
    exposed-modules: Data.Recursive.R.Internal
    exposed-modules: Data.Recursive.Set
    exposed-modules: Data.Recursive.Thunk

    build-depends:    base ^>=4.15.1.0
    build-depends:    containers ^>=0.6.4.1

    default-language: Haskell2010

test-suite doctest
    type:             exitcode-stdio-1.0
    main-is:          doctests.hs
    default-language: Haskell2010
    ghc-options:      -threaded

    build-depends:    rec-def
    build-depends:    base ^>=4.15.1.0
    build-depends:    doctest ^>=0.18.2

